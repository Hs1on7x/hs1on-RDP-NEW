name: RDP
on:
  workflow_dispatch:
jobs:
  secure-rdp:
    runs-on: ubuntu-22.04
    timeout-minutes: 3600
    steps:
      - name: Configure Core RDP Settings
        run: |
          # Update system
          sudo apt-get update
          
          # Install minimal desktop environment that works reliably with RDP
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
            lxde-core \
            lxde-common \
            lxsession \
            openbox \
            pcmanfm \
            lxterminal \
            xrdp \
            firefox \
            gedit \
            dbus-x11
            
          # Configure XRDP
          sudo systemctl enable xrdp
          sudo systemctl enable xrdp-sesman
          
          # Create simple session script that works
          sudo bash -c 'cat > /etc/xrdp/startwm.sh << EOF
#!/bin/sh
if [ -r /etc/default/locale ]; then
  . /etc/default/locale
  export LANG LANGUAGE
fi

# Start LXDE session
exec /usr/bin/startlxde
EOF'
          
          sudo chmod +x /etc/xrdp/startwm.sh
          
          # Simple XRDP config
          sudo sed -i 's/max_bpp=32/max_bpp=24/g' /etc/xrdp/xrdp.ini
          sudo sed -i 's/#tcp_nodelay=1/tcp_nodelay=1/g' /etc/xrdp/xrdp.ini
          
          echo "LXDE desktop environment configured"
          
      - name: Create RDP User with Static Password
        run: |
          password="admin@123"
          
          # Create user
          sudo useradd -m -s /bin/bash TOOLBOXLAP
          echo "TOOLBOXLAP:$password" | sudo chpasswd
          sudo usermod -aG sudo TOOLBOXLAP
          
          # Simple session configuration for LXDE
          sudo mkdir -p /home/TOOLBOXLAP
          echo "/usr/bin/startlxde" | sudo tee /home/TOOLBOXLAP/.xsession
          sudo chmod +x /home/TOOLBOXLAP/.xsession
          sudo chown -R TOOLBOXLAP:TOOLBOXLAP /home/TOOLBOXLAP
          
          # Test user creation
          if ! id "TOOLBOXLAP" &>/dev/null; then
              echo "User creation failed"
              exit 1
          fi
          
          echo "RDP_CREDS=User: TOOLBOXLAP | Password: $password" >> $GITHUB_ENV
          echo "User TOOLBOXLAP created successfully"
          
      - name: Install Tailscale
        run: |
          curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.noarmor.gpg | sudo tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null
          curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.tailscale-keyring.list | sudo tee /etc/apt/sources.list.d/tailscale.list
          sudo apt-get update
          sudo apt-get install -y tailscale
          
      - name: Establish Tailscale Connection
        run: |
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=kali-runner-$GITHUB_RUN_ID
          sleep 10
          tsIP=$(tailscale ip -4)
          retries=0
          while [ -z "$tsIP" ] && [ $retries -lt 10 ]; do
              sleep 5
              tsIP=$(tailscale ip -4)
              retries=$((retries + 1))
          done
          if [ -z "$tsIP" ]; then
              echo "Tailscale IP not assigned. Exiting."
              exit 1
          fi
          echo "TAILSCALE_IP=$tsIP" >> $GITHUB_ENV
          
      - name: Install Security Tools
        run: |
          # Install basic security tools
          sudo apt-get install -y nmap netcat-traditional curl wget git vim python3 python3-pip
          
          # Install tools from binaries to avoid package conflicts
          cd /tmp
          
          # Install Gobuster
          wget -q https://github.com/OJ/gobuster/releases/download/v3.6.0/gobuster_Linux_x86_64.tar.gz
          tar -xzf gobuster_Linux_x86_64.tar.gz
          sudo mv gobuster /usr/local/bin/
          
          # Install Subfinder
          wget -q https://github.com/projectdiscovery/subfinder/releases/download/v2.6.3/subfinder_2.6.3_linux_amd64.zip
          unzip -q subfinder_2.6.3_linux_amd64.zip
          sudo mv subfinder /usr/local/bin/
          
          # Install Httpx
          wget -q https://github.com/projectdiscovery/httpx/releases/download/v1.3.7/httpx_1.3.7_linux_amd64.zip
          unzip -q httpx_1.3.7_linux_amd64.zip
          sudo mv httpx /usr/local/bin/
          
          # Install Nuclei
          wget -q https://github.com/projectdiscovery/nuclei/releases/download/v3.0.4/nuclei_3.0.4_linux_amd64.zip
          unzip -q nuclei_3.0.4_linux_amd64.zip
          sudo mv nuclei /usr/local/bin/
          
          # Install Python security libraries
          pip3 install --user requests beautifulsoup4 scapy paramiko dnspython
          
          # Create desktop shortcuts
          sudo mkdir -p /home/TOOLBOXLAP/Desktop
          sudo bash -c 'cat > /home/TOOLBOXLAP/Desktop/SecurityTools.txt << EOF
SECURITY TOOLS INSTALLED:

Network Scanning:
- nmap (network scanner)
- nc/netcat (network utility)

Web Security:
- gobuster (directory brute forcer)
- subfinder (subdomain finder)
- httpx (HTTP toolkit)
- nuclei (vulnerability scanner)

System Tools:
- curl, wget (HTTP clients)
- python3 with security libraries

Usage Examples:
nmap -sV target.com
gobuster dir -u http://target.com -w /usr/share/wordlists/dirb/common.txt
subfinder -d target.com
httpx -l domains.txt
nuclei -u target.com

Open Terminal: Menu -> System Tools -> LXTerminal
EOF'
          
          sudo chown -R TOOLBOXLAP:TOOLBOXLAP /home/TOOLBOXLAP/Desktop
          
          echo "Security tools installed successfully"
          
      - name: Start RDP Services
        run: |
          # Start services
          sudo systemctl start xrdp-sesman
          sleep 3
          sudo systemctl start xrdp
          sleep 5
          
          # Check services
          echo "=== Service Status ==="
          sudo systemctl status xrdp --no-pager
          sudo systemctl status xrdp-sesman --no-pager
          
          # Check listening ports
          echo "=== Listening Ports ==="
          sudo netstat -tlnp | grep -E "(3389|3350)"
          
          echo "RDP services started successfully"
          
      - name: Verify RDP Accessibility
        run: |
          echo "Tailscale IP: $TAILSCALE_IP"
          
          # Test local connections
          timeout 5 bash -c "</dev/tcp/127.0.0.1/3389" 2>/dev/null
          if [ $? -eq 0 ]; then
              echo "✓ RDP port 3389 is accessible"
          else
              echo "✗ RDP port 3389 is NOT accessible"
          fi
          
          timeout 5 bash -c "</dev/tcp/127.0.0.1/3350" 2>/dev/null
          if [ $? -eq 0 ]; then
              echo "✓ Sesman port 3350 is accessible"
          else
              echo "✗ Sesman port 3350 is NOT accessible"
          fi
          
          echo "RDP services ready for connection"
          
      - name: Maintain Connection
        run: |
          echo ""
          echo "=== SECURITY TOOLS RDP ACCESS ==="
          echo "Address: $TAILSCALE_IP"
          echo "Username: hs1on"
          echo "Password: (leave blank - no password required)"
          echo "Desktop: LXDE (Lightweight)"
          echo "Tools: See SecurityTools.txt on Desktop"
          echo "Terminal: Menu -> System Tools -> LXTerminal"
          echo "=========================="
          echo ""
          while true; do
              echo "[$(date)] RDP Active - Use Ctrl+C in workflow to terminate"
              sleep 300
          done
