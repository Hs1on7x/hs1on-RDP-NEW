name: RDP
on:
  workflow_dispatch:
jobs:
  secure-rdp:
    runs-on: ubuntu-latest
    timeout-minutes: 3600
    steps:
      - name: Install Desktop Environment and RDP
        run: |
          # Update package lists with retry
          sudo apt-get update || (sleep 30 && sudo apt-get update)
          
          # Install desktop environment without problematic packages
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --fix-missing \
            xfce4-session \
            xfce4-panel \
            xfce4-terminal \
            xfce4-settings \
            xfwm4 \
            thunar \
            xrdp \
            firefox \
            gedit \
            dbus-x11
          
          echo "Desktop environment installed successfully"
          
      - name: Install Security Tools (Safe Method)
        run: |
          # Install tools that are guaranteed to work on Ubuntu
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
            nmap \
            netcat-traditional \
            curl \
            wget \
            git \
            vim \
            htop \
            net-tools \
            dnsutils \
            whois \
            traceroute \
            telnet \
            ftp \
            ssh \
            python3 \
            python3-pip \
            build-essential
            
          echo "Basic security tools installed successfully"
          
      - name: Install Additional Tools from Source
        run: |
          # Create tools directory
          mkdir -p /tmp/security-tools
          cd /tmp/security-tools
          
          # Install Gobuster
          wget https://github.com/OJ/gobuster/releases/download/v3.6.0/gobuster_Linux_x86_64.tar.gz
          tar -xzf gobuster_Linux_x86_64.tar.gz
          sudo mv gobuster /usr/local/bin/
          
          # Install Subfinder
          wget https://github.com/projectdiscovery/subfinder/releases/download/v2.6.3/subfinder_2.6.3_linux_amd64.zip
          unzip subfinder_2.6.3_linux_amd64.zip
          sudo mv subfinder /usr/local/bin/
          
          # Install Httpx
          wget https://github.com/projectdiscovery/httpx/releases/download/v1.3.7/httpx_1.3.7_linux_amd64.zip
          unzip httpx_1.3.7_linux_amd64.zip
          sudo mv httpx /usr/local/bin/
          
          # Install Nuclei
          wget https://github.com/projectdiscovery/nuclei/releases/download/v3.0.4/nuclei_3.0.4_linux_amd64.zip
          unzip nuclei_3.0.4_linux_amd64.zip
          sudo mv nuclei /usr/local/bin/
          
          echo "Additional security tools installed successfully"
          
      - name: Configure XRDP for Remote Desktop
        run: |
          # Enable and configure XRDP service
          sudo systemctl enable xrdp
          sudo systemctl start xrdp
          
          # Configure XRDP to use XFCE desktop
          echo "startxfce4" | sudo tee /etc/skel/.xsession
          sudo chmod +x /etc/skel/.xsession
          
          # Configure XRDP settings for better performance
          sudo sed -i 's/max_bpp=32/max_bpp=24/g' /etc/xrdp/xrdp.ini
          sudo sed -i 's/#tcp_nodelay=1/tcp_nodelay=1/g' /etc/xrdp/xrdp.ini
          
          # Configure firewall
          sudo ufw allow 3389/tcp
          sudo ufw --force enable
          
          # Restart XRDP service
          sudo systemctl restart xrdp
          
          echo "XRDP configured successfully"
          
      - name: Create RDP User with Static Password
        run: |
          # Create user account
          sudo useradd -m -s /bin/bash TOOLBOXLAP
          echo "TOOLBOXLAP:admin@123" | sudo chpasswd
          
          # Add user to sudo group
          sudo usermod -aG sudo TOOLBOXLAP
          
          # Create .xsession for the user
          sudo mkdir -p /home/TOOLBOXLAP
          echo "startxfce4" | sudo tee /home/TOOLBOXLAP/.xsession
          sudo chmod +x /home/TOOLBOXLAP/.xsession
          sudo chown TOOLBOXLAP:TOOLBOXLAP /home/TOOLBOXLAP/.xsession
          
          # Create Desktop directory
          sudo mkdir -p /home/TOOLBOXLAP/Desktop
          sudo chown -R TOOLBOXLAP:TOOLBOXLAP /home/TOOLBOXLAP
          
          # Set environment variable for credentials
          echo "RDP_CREDS=User: TOOLBOXLAP | Password: admin@123" >> $GITHUB_ENV
          
          # Verify user creation
          if ! id "TOOLBOXLAP" &>/dev/null; then
              echo "User creation failed"
              exit 1
          fi
          
          echo "User created successfully"
          
      - name: Install Tailscale
        run: |
          # Add Tailscale repository
          curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.noarmor.gpg | sudo tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null
          curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.tailscale-keyring.list | sudo tee /etc/apt/sources.list.d/tailscale.list
          
          # Install Tailscale
          sudo apt-get update
          sudo apt-get install -y tailscale
          
          echo "Tailscale installed successfully"
          
      - name: Establish Tailscale Connection
        run: |
          # Connect to Tailscale network
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=security-runner-$GITHUB_RUN_ID
          
          # Wait for IP assignment
          sleep 10
          
          # Get Tailscale IP
          TAILSCALE_IP=$(tailscale ip -4)
          retries=0
          while [ -z "$TAILSCALE_IP" ] && [ $retries -lt 10 ]; do
              sleep 5
              TAILSCALE_IP=$(tailscale ip -4)
              retries=$((retries + 1))
          done
          
          if [ -z "$TAILSCALE_IP" ]; then
              echo "Tailscale IP not assigned. Exiting."
              exit 1
          fi
          
          echo "TAILSCALE_IP=$TAILSCALE_IP" >> $GITHUB_ENV
          echo "Tailscale connected successfully with IP: $TAILSCALE_IP"
          
      - name: Verify RDP Accessibility
        run: |
          echo "Tailscale IP: $TAILSCALE_IP"
          
          # Test RDP port connectivity
          timeout 10 bash -c "</dev/tcp/$TAILSCALE_IP/3389" 2>/dev/null
          if [ $? -eq 0 ]; then
              echo "TCP connectivity to port 3389 successful!"
          else
              echo "TCP connection to RDP port 3389 failed, checking XRDP status..."
              sudo systemctl status xrdp --no-pager
              sudo netstat -tlnp | grep 3389
              echo "Attempting to restart XRDP..."
              sudo systemctl restart xrdp
              sleep 5
              # Don't exit on failure, continue anyway
          fi
          
      - name: Install Python Security Libraries
        run: |
          # Install useful Python libraries for security work
          pip3 install --user \
            requests \
            beautifulsoup4 \
            scapy \
            paramiko \
            pycryptodome \
            dnspython \
            colorama \
            argparse
            
          echo "Python security libraries installed successfully"
          
      - name: Create Tool Shortcuts
        run: |
          # Create desktop shortcuts for installed tools
          sudo -u TOOLBOXLAP mkdir -p /home/TOOLBOXLAP/Desktop
          
          # Create a tools info file
          sudo -u TOOLBOXLAP tee /home/TOOLBOXLAP/Desktop/SecurityTools.txt > /dev/null << 'EOF'
INSTALLED SECURITY TOOLS:

Network Scanning:
- nmap (network mapper)
- nc/netcat (network swiss army knife)

Web Security:
- gobuster (directory/file brute forcer)
- subfinder (subdomain discovery)
- httpx (HTTP toolkit)
- nuclei (vulnerability scanner)

System Tools:
- curl, wget (HTTP clients)
- dnsutils (dig, nslookup)
- net-tools (netstat, ifconfig)

Python Libraries:
- requests, scapy, paramiko
- beautifulsoup4, dnspython

Usage Examples:
nmap -sV target.com
gobuster dir -u http://target.com -w /usr/share/wordlists/dirb/common.txt
subfinder -d target.com
httpx -l domains.txt
nuclei -t /path/to/templates -u target.com
EOF
          
          sudo chown TOOLBOXLAP:TOOLBOXLAP /home/TOOLBOXLAP/Desktop/SecurityTools.txt
          
      - name: Maintain Connection
        run: |
          echo ""
          echo "=== SECURITY TOOLS DESKTOP ACCESS ==="
          echo "Address: $TAILSCALE_IP"
          echo "Username: TOOLBOXLAP"
          echo "Password: admin@123"
          echo "Desktop: XFCE4"
          echo "Tools: See SecurityTools.txt on Desktop"
          echo "=========================="
          echo ""
          
          while true; do
              echo "[$(date)] Security Tools RDP Active - Use Ctrl+C in workflow to terminate"
              sleep 300
          done
